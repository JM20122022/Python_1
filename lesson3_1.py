#1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
#################################################################################################

def my_dev():
    try:
        arg_1 = int(input('Enter a devidend '))
        arg_2 = int(input('Enter a devisor '))
        print(arg_1 // arg_2)
    except ZeroDivisionError:
        print('You cannot devide by 0')
    input()

print(my_dev())


#############################################################################################################
#2. Выполнить функцию, которая принимает несколько параметров,
# описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Осуществить вывод данных о пользователе одной строкой.
#############################################################################################################

def user_details(name, surname, year, city, email, phone):
    print(f'The users name is {name}, their surname is {surname}, they were born in {year} in {city}, you can reach them at {email} and by {phone}')

name = 'Boris'
surname = 'Pig'
year = 2020
city = 'Moscow'
email = '2345@gmail.com'
phone = '+7 925 362 35 34'
print(user_details(name, surname, year, city, email, phone))


#############################################################################################################
#3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и
# возвращает сумму наибольших двух аргументов.
#############################################################################################################

def my_func(var_1, var_2, var_3):

    numbers = [var_1, var_2, var_3]
    a = max(numbers)
    numbers.remove(a)
    b = max(numbers)
    return a + b

var_1 = 3
var_2 = 4
var_3 = 7
print(my_func(var_1, var_2, var_3))



#############################################################################################################
#4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y).
# При решении задания нужно обойтись без встроенной функции возведения числа в степень.
#############################################################################################################


def my_func(x,y):
    return x**y

x = float(input('Enter a real positive number '))
y = int(input('Enter an even negative number '))
print(my_func(x, y))



#or


def my_func(x,y):
    y = abs(y)
    i = 1
    if abs(y) == 2:
        result = 1/(x*x)
    res_mid = 1
    while i <= y:
        res_mid = res_mid * x
        i = i + 1
    result = 1 / res_mid
    return result



x = 2.025
y = -3
print(my_func(x,y))




#############################################################################################################
#5. Программа запрашивает у пользователя строку чисел, разделённых пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter.
# Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введён после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
#############################################################################################################

def my_sum():
    sum_result = 0
    exit = False
    while exit == False:
        a = str(input('enter your  numbers with the space or X to leave'))
        a1 = a.split()
        result = 0
        for x in range(len(a1)):
            if a1[x] == 'X':
                exit = True
                break
            else:
                result = result + int(a1[x])
        sum_result = sum_result + result
        print(f'The sum is {sum_result}')
    print(f'The final sum is {sum_result}')

my_sum()



#############################################################################################################
#6. Реализовать функцию int_func(),
# принимающую слова из маленьких латинских букв и возвращающую их же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
#############################################################################################################

def int_func(*args):
    a = input('Your statement ')
    a1 = a.title()
    print(a1)

int_func()


### Добрый день!
#Не смогла понять в чем отличие задания 6 от задания 7.
#Мой код вроде работат на отдельные слова и строки...
#Если можно, расскажите, пожалуйста!
#Спасибо



